// LDA Peripheral, drives ASC, LDA, and VGA
module LDA_peripheral
(
	input clk,reset,
	
	// VGA
   output      [7:0]         VGA_B,
   output                    VGA_BLANK_N,
   output                    VGA_CLK,
   output      [7:0]         VGA_G,
   output                    VGA_HS,
   output      [7:0]         VGA_R,
   output                    VGA_SYNC_N,
   output                    VGA_VS
);

	// VGA adapter and signals
	logic [8:0] vga_x;
	logic [7:0] vga_y;
	logic [2:0] vga_color;
	logic vga_plot;

	// LDA signals
	logic lda_done,lda_start;
	logic[8:0] lda_x0,lda_x1;
	logic[7:0] lda_y0,lda_y1;
	logic[2:0] user_colour;
	
	// VSC instance
	
	// LDA instance
	LDA lda
	(
		.clk(clk), .reset(reset),
		.start(lda_start),
		.x0(lda_x0), .x1(lda_x1),
		.y0(lda_y0), .y1(lda_y1),
		.i_colour(lda_colour),
		.done(lda_done),
		.x(vga_x), .y(vga_y),
		.plot(vga_plot), .o_colour(vga_color)
	);
	
	// VGA instance
	vga_adapter #
	(
		.BITS_PER_CHANNEL(1)
	)
	vga_inst
	(
		.CLOCK_50(clk),
		.VGA_R(VGA_R),
		.VGA_G(VGA_G),
		.VGA_B(VGA_B),
		.VGA_HS(VGA_HS),
		.VGA_VS(VGA_VS),
		.VGA_SYNC_N(VGA_SYNC_N),
		.VGA_BLANK_N(VGA_BLANK_N),
		.VGA_CLK(VGA_CLK),
		.x(vga_x),
		.y(vga_y),
		.color(vga_color),
		.plot(vga_plot)
	);
endmodule
