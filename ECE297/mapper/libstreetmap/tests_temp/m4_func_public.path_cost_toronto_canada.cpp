#include <random>
#include <iostream>
#include <unittest++/UnitTest++.h>

#include "StreetsDatabaseAPI.h"
#include "m1.h"
#include "m3.h"
#include "m4.h"

#include "unit_test_util.h"
#include "courier_verify.h"

using ece297test::relative_error;
using ece297test::courier_path_is_legal_with_capacity;


SUITE(path_cost_toronto_canada_public) {
    TEST(path_cost_toronto_canada) {
        std::vector<unsigned> path;
        double right_turn_penalty;
        double left_turn_penalty;
        double expected;
        double actual;

        path = {150394, 68125, 68116, 68114, 68123, 68109, 68110, 68130, 68126, 68131, 143131, 2662, 2663, 2664, 143124, 143125, 108856, 108857, 108861, 108869, 2896, 5464};
        right_turn_penalty = 7.60797423017268226;
        left_turn_penalty = 14.51409751016279870;
        expected = 144.69829648945622580;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {1994, 1995, 1996, 11814, 11813, 148268, 148267, 148266, 148265, 148264, 148263, 148262, 148261, 148301, 102280, 102279, 138052, 138051, 138050, 138049, 138048, 138047, 138046, 138045, 138044, 138043, 138042, 138041, 138040, 138039, 138038, 138037, 138036, 138055, 138054, 138053, 1892, 895};
        right_turn_penalty = 2.06799431182801596;
        left_turn_penalty = 29.85155792620821913;
        expected = 210.40929393655397917;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {32531, 32532, 32533, 32534, 36499, 36500, 124888, 132947, 132926, 19332, 148463, 132919, 132917, 148456, 132935, 148457, 148458, 132922, 132923, 132932, 136928, 136929, 124881, 124880, 124879, 124878, 124877, 124876, 124875, 124874, 124873};
        right_turn_penalty = 44.72899763197366951;
        left_turn_penalty = 31.44426265095032846;
        expected = 280.02599305689517450;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {98432, 98446, 98436, 149327, 107595, 138684, 138685, 107597, 107596, 84131, 84130, 84129, 84128, 61806, 61805, 61798, 61797, 61807, 61808, 61809, 155485, 155484, 84121, 84122, 84123, 84124, 84125, 84126, 84127, 61822, 61820, 61823, 61824, 61825, 61826, 61827, 61828, 116168, 116169, 116170, 116161, 116162, 61765, 61766, 21223, 21224, 85560, 85562};
        right_turn_penalty = 8.80663637710099323;
        left_turn_penalty = 13.54350058931469647;
        expected = 313.57560390579271825;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {134623, 35181, 35180, 35174, 35173, 90026, 90056, 90055, 90053, 90057, 90058, 100730, 100729, 100728, 100727};
        right_turn_penalty = 44.21604823979484422;
        left_turn_penalty = 43.40048889846762847;
        expected = 315.19728896939295737;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {71835, 71848, 71847, 65733, 65754, 65755, 65756, 65757, 65758, 65759, 148783, 135971, 135970, 148784, 148785, 148786, 74350, 74356, 74357, 32123, 32122, 32121, 32120, 32119, 58109, 58108, 58107, 58106, 58105, 58104, 58103, 58102, 157345, 157344, 157343, 157342, 157341, 157340, 157339, 157338, 157337, 157336, 157335, 157334, 157333, 157332, 157331, 157330, 157329, 157328, 157327, 157326, 157325, 155717, 155716, 155715, 155714, 155713, 155712, 125254, 125253, 17089, 17088, 17087, 17086};
        right_turn_penalty = 15.06816743480498388;
        left_turn_penalty = 3.42981905088287276;
        expected = 317.55159223722495199;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {1012, 1011, 1010, 1009, 32143, 32144, 32145, 32146, 32147, 32148, 32149, 32150, 32151, 32152, 1038, 1037, 1036, 153713, 153712, 153711, 153710, 67493, 67492, 67491, 67490, 67488, 67487, 25271, 25270, 25272, 67204, 67203, 67202, 67201, 67196, 67200, 67199, 67198, 29009, 29008, 29007, 29006, 29005, 29004, 28965, 28964, 136165, 67088, 67086, 67120, 67119, 67118, 67117, 67116, 67115, 67114, 67113, 67112, 67094, 67107, 67108};
        right_turn_penalty = 27.42433613600799802;
        left_turn_penalty = 33.60087461179634261;
        expected = 332.53119475534765570;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {18660, 18659, 18658, 18657, 18656, 18655, 104297, 18661, 18662, 123513, 123512, 123514, 143364, 123515, 105629, 105645, 105631, 130884};
        right_turn_penalty = 32.08604274521162836;
        left_turn_penalty = 21.61301339212587891;
        expected = 356.76103519595483249;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {133788, 143870, 193, 86981, 269, 271, 272, 98770, 98771, 236, 237, 88138, 88139, 20577, 20569, 20571, 20572, 20574, 20575, 20576, 115948, 115949, 84326, 84325, 84327, 153202, 113805, 113807, 113806, 8924, 8923, 8922, 135894, 135895, 135897, 135896, 126645, 126644, 126643, 126642, 126641, 126640, 112181, 112180, 112179, 112184, 112183, 112182, 124037, 124036, 124035, 124034, 126647, 126646, 143447, 126648, 112290, 112289, 112288, 84075, 84827, 84828, 156739, 156738, 156737, 156736, 19138, 84949, 84948, 84947, 84946, 84945, 84944, 84943, 84942, 84941, 115590, 115589, 115588, 115587};
        right_turn_penalty = 7.01531274599673704;
        left_turn_penalty = 21.21425974815647564;
        expected = 406.57394604459312859;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {110934, 110932, 143362, 143363, 1800, 129533, 65740, 65751, 65747, 65741, 65742, 152248, 65744, 65743, 65753, 65754, 65746, 65732, 101004, 101003, 101002, 101001, 98817, 98816, 98815, 98814, 98813, 98812, 98811, 98810, 98809, 98818, 140409, 140408, 17837, 17836, 17835, 17834, 17833, 86127, 86109, 147456, 137307, 103107, 103108};
        right_turn_penalty = 32.73973028461581691;
        left_turn_penalty = 16.97809240709814205;
        expected = 407.97893354117030640;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {99282, 99281, 143920, 99286, 143919, 156376, 83452, 83451, 83450, 765, 764, 763, 762, 102348, 102347, 102346, 102345, 102344, 102343, 102342, 102341, 102336, 138126, 138125, 28508, 28507, 83609, 28513, 28512, 28511, 28510, 28509, 154895, 154894, 154893, 154892, 154891, 154890, 154897, 154896, 42806, 42805, 42804, 42803, 42802, 42801, 84261, 84260, 30828, 30827, 680, 402, 401, 400, 399, 398, 46932, 46933, 46934, 46935, 46936, 47838, 47839, 47840, 47841, 47842, 11417, 11416, 11415, 11414, 11413, 11412, 11411, 11410, 11409, 11408, 11407, 11406, 11405, 11404, 11403, 11402, 11401, 11400, 11399, 11398, 10547, 10546};
        right_turn_penalty = 18.43386607020583767;
        left_turn_penalty = 24.66518636116725105;
        expected = 527.90137919251014864;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {104123, 104110, 76218, 76219, 76220, 76221, 76222, 75511, 75512, 75513, 75514, 75515, 99347, 90257, 90258, 90242, 99361, 99362, 120805, 120810, 120811, 120812, 120804, 120798, 120801, 120802, 120803, 114846, 114845, 114844, 114843, 114842, 114841, 114840, 114839, 114835, 114834, 114833, 153476, 153475, 114832, 114831, 114830, 114829, 31937, 31936, 31935, 31934, 31933, 75583, 75584, 75585, 75586, 75587, 75588, 31923, 31924, 31926};
        right_turn_penalty = 25.19635227623298945;
        left_turn_penalty = 22.68776315660033660;
        expected = 548.37702015105048758;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {148083, 148080, 96784, 96768, 96752, 96795, 96772, 156627, 74299, 49499, 156586, 52508, 50826, 74294, 49978, 74291, 74290, 74287, 124674, 124675, 36194, 36195, 36196, 36197, 139315, 139316, 139317, 156713, 121053, 121054, 121055, 121056, 141636, 134273, 121057, 113329, 36212, 156371, 156373, 156895, 156896, 36214, 36215, 125702, 125703, 125701, 113330, 7815, 35407, 36224, 36226, 36227, 36230, 7821, 7822, 147045, 147047, 36234, 110805, 36240, 146551, 20036, 147042, 121913, 121914, 134617, 134618, 134619, 150396, 127979, 21941, 21940, 21939, 80339, 80340, 80341, 80342, 49036, 49035, 52621, 69613, 19924};
        right_turn_penalty = 0.00000000000000000;
        left_turn_penalty = 0.00000000000000000;
        expected = 578.20105283055079326;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {30366, 59869, 59865, 59868, 59667, 59666, 59663, 59664, 59874, 59872, 59870, 59778, 59777, 59744, 59745, 59779, 59760, 19218, 19217, 19216, 19215, 19214, 19213, 19212, 19211, 19210, 111590, 111589, 84105, 142964, 142963, 142962, 142961, 142965, 142969, 142970, 142966, 129079, 142955, 142977, 142978, 142982, 142980, 105278, 62953, 62954, 142999, 143000, 62961, 62962, 62963, 62964, 62965, 62966, 142983, 62967, 143012, 143013, 143010, 143014, 143008, 57303, 57300, 57299, 57355};
        right_turn_penalty = 8.84470390022379505;
        left_turn_penalty = 33.96602452994984134;
        expected = 600.90819671581778039;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {149327, 98423, 98452, 98448, 29462, 29463, 57008, 57010, 57011, 57012, 98471, 98469, 98464, 98456, 98457, 98458, 98459, 98460, 62275, 62273, 62269, 62268, 62276, 62277, 84168, 84167, 29636, 85536, 85535, 85534, 85533, 85532, 85531, 85530, 85539, 85546, 85549, 145219, 145218, 145217, 145216, 145215, 145214, 145220, 26877, 26876, 26875, 26874, 26873, 26872, 26871, 59775, 59766, 59762, 59728, 59729, 59780, 59749, 59727, 59731, 59758, 59756, 59755, 59767, 59732, 59740, 59737, 59753, 59736, 59741, 59746, 59771, 59730, 59772, 59773, 59776, 59747, 59751, 59790, 59791, 106040, 106041, 106042, 155177, 155178, 106051, 106037, 106038, 106039, 70198, 70194, 70195, 27303, 27302, 27304, 70192, 70191, 70190, 70189, 70186, 70184, 70183, 71300, 71299, 71298, 71293, 144706, 71313, 71312, 71301, 71303, 147461, 147504, 147505, 147506, 147507, 147508, 147509, 147510};
        right_turn_penalty = 26.58785888142154974;
        left_turn_penalty = 12.09134270982762338;
        expected = 771.41861243582195584;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {16196, 8273, 103386, 16, 111782, 111784, 143246, 125165, 16199, 1062, 14, 111787, 111788, 103384, 16194, 16193, 8272, 124052, 124053, 124054, 645, 123655, 9538, 9539, 39239, 39240, 39241, 39242, 39243, 143259, 39223, 39224, 39225, 140559, 129208, 82202, 82203, 82196, 82195, 82194, 101365, 82180, 140550, 140553, 140555, 140552, 9217, 28831, 111927, 28829, 28830, 111933, 107649, 149114, 124118, 124119, 124120, 124121, 124122, 86619, 86620, 86621, 86622, 103238, 103230, 103231, 103232, 103233, 103234, 103235, 103236, 103237, 86638, 86639, 86640, 86641, 86642, 86643, 86644, 86645, 86646, 84529, 84517, 84518, 84519, 84520, 84521, 84522, 84523, 84524, 132288, 132289, 132290, 132291, 132283, 132274, 132275, 132276, 132277, 132278, 132279, 132280, 132281, 132282, 114920, 114921, 114922, 114923, 114924, 114925, 114926, 114927, 114928, 114929, 116232, 116233, 110708, 110710, 116321, 8373, 8374, 8375};
        right_turn_penalty = 0.00000000000000000;
        left_turn_penalty = 0.00000000000000000;
        expected = 806.54099336217484506;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {18113, 121349, 121350, 121351, 121352, 121314, 121315, 121316, 121344, 121345, 18104, 121562, 121563, 142805, 142806, 124004, 124003, 156839, 156842, 156843, 156844, 156845, 157174, 157175, 157172, 157173, 118413, 147945, 147946, 147944, 118412, 118410, 118398, 155248, 155249, 61879, 61878, 61874, 61877, 61872, 61871, 61863, 61864, 61867, 61870, 61869, 61865, 61868, 61855, 61854, 61853, 61852, 61851, 61850, 61849, 61848, 116172, 116171, 116167, 116166, 116165, 116182, 116181, 116180, 148731, 116198, 116199, 56522, 56521, 56518, 84409, 84408, 84407, 84406, 84405, 84410, 85550, 85551, 85552, 85544, 85545, 85541, 85543, 88995, 88994, 88993, 88992, 88991, 53303, 53479, 123371, 129538, 129539, 36005, 42760, 115653, 115672, 115676, 115668, 115674, 115673, 115664, 115663, 21913, 21914, 36002};
        right_turn_penalty = 17.75561558103672510;
        left_turn_penalty = 20.90483959211471188;
        expected = 886.33558671622517977;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {107649, 149114, 124117, 124116, 124111, 124115, 124114, 124113, 124112, 66482, 66481, 66480, 66479, 66478, 66477, 66459, 66463, 66476, 66474, 66475, 66458, 66470, 66472, 66473, 66438, 66437, 66435, 66433, 66434, 66444, 66442, 66441, 66443, 66447, 66451, 66453, 66454, 82624, 82625, 135662, 23473, 23472, 23471, 9262, 9261, 9260, 9259, 9258, 9257, 9256, 9255, 9254, 9253, 9252, 9251, 9250, 9249, 9248, 9247, 9246, 9245, 9244, 9243, 9242, 9241, 9240, 9239, 9238, 9237, 9236, 9235, 9234, 9233, 9232, 9231, 9230, 9229, 9228, 9227, 9226, 9225, 9224, 9223, 422, 423, 424, 425, 154567, 154568, 154569, 82606, 82607, 82608, 82609, 82610, 82611, 82612, 82613, 82614, 82615, 82616, 82617, 83073, 83074, 83075, 83076, 83077, 83104, 83105, 83106, 83107, 83108, 83109, 83110, 83111, 116949, 116950, 116951, 116952, 116953, 116954, 116955, 116956, 11401, 11400, 11399, 11398, 10547, 10546, 10545, 11418, 11427, 11426, 11425, 11424, 11423, 11422, 11431, 11430, 11429, 11428, 130708, 152822, 152821, 152820, 152819, 14407, 15246};
        right_turn_penalty = 35.66826583010921325;
        left_turn_penalty = 41.06389476917092196;
        expected = 938.79131245109874726;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {127782, 127779, 122409, 121734, 121733, 121732, 121731, 121730, 121729, 121728, 121727, 97144, 97170, 150615, 97195, 121825, 121824, 130141, 121834, 121833, 121832, 121830, 121829, 130143, 121828, 130144, 121831, 121823, 121827, 121826, 150625, 150624, 150623, 150622, 150621, 150620, 150619, 150618, 150617, 150616, 150630, 150632, 150398, 150397, 150396, 134619, 134618, 134617, 121914, 121913, 147039, 121915, 150399, 147038, 36250, 36251, 20043, 36244, 36245, 20042, 36254, 69794, 69793, 69787, 69784, 69789, 79388, 79387, 79386, 79385, 79376, 91164, 79382, 50461, 50462, 53431, 79374, 157655, 79381, 79324, 79323, 79322, 79315, 79318, 79312, 79282, 79271, 79272, 79275, 112894, 68134, 68133, 68132, 68114, 68123, 68109, 68110, 68130, 68126, 68131, 143131, 143137, 143138, 134205, 134206, 134207, 134208, 134209, 134200, 134201, 134202, 134203, 134204, 68055, 68058, 68100, 68049, 68051, 68052, 68095, 68096, 68097, 68098, 68059, 68048, 68085, 68086, 68087, 68088, 68089, 68090, 68091, 68092, 68093, 68094, 112854, 112857, 112856, 112855, 68067, 68064, 68054, 68068, 68069, 68070, 68071, 68072, 68073, 149147, 149148, 149149, 149150, 149151, 149152, 86676, 149153, 86674, 86675, 84227, 84226, 86509, 86510, 86511, 86512, 86513, 86514, 86515, 62635, 62633, 62641, 62642, 62643, 62644, 62645, 62646, 62647, 62648, 62649, 62650, 62651, 62652};
        right_turn_penalty = 22.86264463471016128;
        left_turn_penalty = 3.14368044911276900;
        expected = 1046.23303268991116965;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {4932, 4933, 136903, 136904, 136905, 137359, 137360, 143132, 143133, 143134, 68121, 68111, 68118, 68113, 68112, 68115, 68128, 68213, 68212, 68211, 68210, 68209, 68195, 68185, 68223, 68220, 68192, 68196, 68222, 68184, 68186, 68205, 143502, 68189, 68176, 68198, 68207, 68221, 68218, 68230, 68229, 68228, 68219, 68177, 68194, 68193, 68197, 68202, 68190, 68183, 68227, 68225, 68208, 68203, 68178, 68215, 68233, 129556, 149901, 36280, 149902, 149903, 149904, 149905, 149906, 10354, 140522, 140523, 102646, 152585, 64965, 64964, 64963, 64811, 64733, 148031, 64744, 64727, 64728, 64985, 64984, 119820, 64986, 64987, 64446, 64217, 64405, 64058, 64195, 64319, 64312, 64335, 64457, 64039, 64124, 64112, 64396, 64080, 64302, 64036, 64264, 129966, 64084, 64351, 64054, 64154, 64372, 157640, 64115, 64236, 85767, 85766, 64046, 64045, 64304, 64568, 64343, 64394, 64242, 64157, 64158, 64215, 64338, 64337, 64071, 64419, 64108, 64107, 64286, 64285, 64367, 64366, 64365, 64364, 63345, 63340, 63339, 63338, 63412, 63396, 63286};
        right_turn_penalty = 17.14811529807515811;
        left_turn_penalty = 3.37670155029121410;
        expected = 1055.95195844858562850;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {121980, 105703, 105704, 105705, 105706, 105707, 105708, 105709, 105710, 156694, 156693, 156692, 156691, 156690, 156689, 156688, 72673, 72670, 156686, 72667, 72659, 156687, 156685, 96584, 72660, 72647, 100890, 72665, 72656, 116839, 72663, 72664, 122749, 122750, 122751, 122752, 155263, 36154, 122860, 122861, 122862, 155204, 155205, 119801, 106119, 106121, 106122, 106116, 106123, 106127, 106117, 106128, 106147, 106148, 106130, 106154, 147724, 147725, 106146, 129899, 84449, 60190, 60203, 155176, 155175, 60196, 60195, 60186, 60194, 60192, 60200, 60183, 60185, 143219, 143218, 143217, 143220, 60181, 60153, 129900, 60156, 60179, 60205, 155279, 155280, 155273, 155274, 155275, 155276, 155277, 155278, 157165, 102015, 157156, 157157, 157158, 157159, 157160, 157161, 157162, 157163, 157164, 116186, 116187, 116188, 100962, 61867, 61870, 61869, 61865, 61868, 61855, 61854, 61853, 61852, 61851, 61850, 61840, 61856, 61857, 61858, 97269, 97270, 97271, 97272, 84114, 84115, 84116, 84117, 84118, 84119, 84120, 143206, 61730, 61748, 61749, 18385};
        right_turn_penalty = 21.14327993573550657;
        left_turn_penalty = 34.92456559888775303;
        expected = 1079.87695654768367604;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {46448, 46445, 82299, 82300, 82301, 82305, 82306, 88928, 102927, 102928, 102932, 102933, 88677, 88676, 88675, 88674, 88673, 88672, 1377, 1378, 1379, 90426, 90427, 90428, 90429, 90430, 90431, 90432, 90433, 90435, 27062, 27063, 102072, 102073, 30024, 30025, 30026, 114988, 114989, 115209, 99479, 99480, 97660, 97657, 79902, 79903, 79905, 79906, 79907, 79908, 79909, 449, 452, 453, 454, 24955, 24956, 24957, 24958, 24959, 115062, 115061, 115060, 115059, 115058, 115057, 115056, 115055, 115054, 115053, 115052, 26713, 26719, 26712, 55946, 55947, 26718, 26717, 26716, 26715, 26714, 154968, 26390, 26391, 26392, 26393, 26394, 26395, 26396, 26397, 26398, 26399, 53761, 53757, 53758, 53759, 53760, 99356, 99374, 99375, 99376, 99377, 99378, 31700, 31698, 31699, 117778, 117777, 117776};
        right_turn_penalty = 19.69419762949836183;
        left_turn_penalty = 10.74124285257252254;
        expected = 1114.23001421639264663;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {25005, 25003, 24993, 24994, 24995, 25001, 25002, 17568, 17646, 12935, 17647, 17648, 133600, 17656, 17657, 17658, 117945, 17650, 17651, 17652, 17653, 12938, 13029, 135352, 135353, 135337, 29188, 29189, 145308, 145303, 145304, 145305, 145306, 145307, 137599, 42656, 42657, 42658, 108565, 108566, 108567, 137610, 137611, 137612, 86743, 86731, 86714, 86736, 86718, 86702, 86729, 125181, 125182, 86711, 86703, 145413, 86721, 86704, 86738, 86739, 86740, 86716, 156502, 86730, 86701, 86713, 86719, 86725, 108562, 108561, 108560, 108559, 108558, 108556, 136020, 136021, 136022, 106, 136028, 136025, 136023, 136024, 136026, 136027, 125119, 125118, 14754, 105, 152901, 152903, 152904, 104, 14747, 125116, 125114, 125115, 125132, 111905, 107984, 84192, 84193, 84194, 84195, 136687, 115520, 14772, 14771, 118065, 111881, 111884, 111885, 111886, 111887, 115521, 152256, 111888, 111889, 14769, 14770, 152255, 62334, 62330, 62337, 62338, 62339, 62326, 62324, 62325, 62327, 61442, 61437, 61441, 61444, 61445, 139107, 61449, 61453, 61446, 61456, 61457, 61458, 61459, 61460, 61461, 61462, 56323, 56326, 56318, 56332, 56333, 56334, 56335, 56336, 56337, 56338, 56339, 56340, 56341, 98402, 98396, 98435, 98437, 98438, 98439, 98440, 98441, 98442, 98443, 98444, 98445, 153596, 153597, 153598, 134228, 134229, 134230, 134231, 134232, 134233, 134234, 61803, 61804, 61799, 61800, 61805, 61806, 84128, 84129, 84130, 84131, 107596, 107597, 138686, 138684, 107595, 149327, 98423, 98452, 98433, 98401, 98405, 98406, 98407, 98408, 98409, 98410, 98411, 98412, 98413, 98414, 98415, 98416, 98417, 98418, 98419, 111283};
        right_turn_penalty = 44.27156308581066213;
        left_turn_penalty = 2.29781591436682353;
        expected = 1151.25128249287968174;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {20310, 20309, 20308, 114316, 114315, 2450, 2449, 114312, 114306, 114308, 114313, 114314, 103970, 103971, 103972, 103973, 103974, 103975, 103976, 103977, 103978, 103979, 103980, 103981, 103982, 103983, 103984, 103985, 103986, 103987, 103988, 103989, 59044, 59046, 59052, 60911, 60906, 60907, 60905, 60913, 60914, 60915, 60916, 60917, 60918, 9607, 140074, 140073, 86145, 82637, 82636, 82635, 82634, 82633, 82632, 82631, 82630, 57787, 57790, 57788, 57785, 57786, 57793, 57791, 57792, 57789, 57783, 57734, 57735, 57738, 57357, 57356, 57360, 57350, 57353, 57355, 57302, 57301, 57303, 143008, 143009, 82593, 20701, 143011, 62958, 142837, 142838, 142839, 142840, 142841, 62959, 62960, 142984, 105278, 105279, 142981, 142982, 142979, 142977, 142955, 142959, 142968, 142961, 142962, 142963, 142964, 84105, 111589, 96414, 155200, 96478, 73814, 73817, 73818, 153544, 60038, 59955, 59954, 59974, 59957, 60056, 60054, 60007, 137663};
        right_turn_penalty = 27.95588451799778440;
        left_turn_penalty = 18.54621291421064200;
        expected = 1191.66104546315682455;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {73991, 73992, 73993, 73994, 73995, 73996, 73997, 79298, 79294, 79306, 79307, 79308, 79309, 79286, 79283, 79290, 79291, 79292, 79313, 79317, 79311, 113269, 79319, 79312, 79282, 79271, 79272, 79275, 112894, 68134, 68133, 68132, 68114, 68123, 68109, 68110, 68130, 68126, 68131, 143131, 143137, 143138, 134205, 134206, 134207, 134208, 134209, 134200, 134201, 134202, 134203, 134204, 68055, 68058, 68100, 68049, 68051, 68052, 68095, 68096, 68097, 68098, 68059, 68048, 68085, 68086, 68087, 68088, 68089, 68090, 68091, 68092, 68093, 68094, 112854, 112857, 112856, 112855, 68067, 68064, 68054, 68068, 68069, 68070, 68071, 68072, 68073, 149147, 149148, 149149, 149150, 149151, 149152, 86676, 149153, 86674, 86675, 84227, 84226, 86509, 86510, 86511, 86512, 86513, 86514, 86515, 62635, 62636, 62639, 62655, 62656, 62657, 62658, 62659, 62660, 62661, 62662, 62663, 62664, 149112, 149110, 149111, 86668, 86669, 86670, 86671, 149566, 149567, 86667, 82627, 82628, 86666, 152314, 152315, 152316, 152317, 152318, 436, 86619, 86620, 86621, 86622, 103238, 103230, 103231, 103232, 103233, 103234, 103235, 103236, 103237, 86638, 86639, 86640, 86641, 86642, 86643, 86644, 86645, 86646, 84529, 84517, 84518, 84519, 84520, 84521, 84522, 84523, 84524, 132288, 132289, 132290, 132291, 132283, 132274, 132275, 132276, 132277, 132278, 132279, 132280, 132281, 132282, 114920, 114921, 114922, 114923, 114924, 114925, 114926, 114927, 114928, 114929, 114930, 114931, 110733, 110734, 149131, 149130, 110735, 137230, 146094, 149119, 149129, 149128, 149127, 149126, 149125, 154944, 154943, 154942, 154941, 154940, 83618, 83617, 83616, 46914, 46913, 46912, 46911, 46910, 46909, 46908, 46907, 30354, 30355, 87574, 87575, 87576, 87577, 87578, 87579, 87580, 87581, 87582, 87583, 145689, 10151, 83126, 83127, 83128};
        right_turn_penalty = 37.02049703255017477;
        left_turn_penalty = 35.22544158476554799;
        expected = 1239.16499803979900207;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {90855, 90853, 90838, 90834, 90861, 90862, 90835, 26989, 26988, 26987, 26986, 26985, 26984, 26991, 26990, 26992, 24195, 24194, 24193, 24192, 24191, 110383, 110375, 110373, 110371, 110382, 110370, 110369, 110353, 110363, 110367, 110358, 110360, 110350, 110352, 110338, 110341, 110342, 110351, 119938, 119939, 110337, 110343, 110344, 89807, 89808, 89804, 89810, 89813, 89817, 89814, 137218, 137196, 137197, 137198, 137199, 137200, 137216, 137217, 138021, 138022, 2325, 13726, 13727, 13728, 13729, 13725, 13687, 13688, 13689, 13690, 13691, 13692, 13693, 13694, 13695, 13696, 13697, 13698, 13699, 13700, 13701, 13702, 13703, 13704, 13705, 13706, 13707, 90538, 90539, 90540, 90541, 90542, 90543, 90544, 90545, 90546, 90547, 118446, 118445, 118443, 149474, 88019, 88020, 88021, 138284, 138285, 93742, 93533, 93064, 93095, 138286, 138287};
        right_turn_penalty = 37.75802956530030485;
        left_turn_penalty = 37.42055046730019541;
        expected = 1291.75396677546814317;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {119014, 138259, 119008, 119006, 119004, 119005, 27396, 74236, 74237, 74220, 74219, 74221, 121933, 121934, 121935, 121936, 149239, 149240, 149241, 149242, 149236, 149237, 149238, 149235, 99309, 99310, 99315, 99311, 99312, 99313, 99314, 98717, 58122, 58125, 58123, 58138, 58140, 58142, 98720, 98714, 98715, 132607, 132608, 132609, 132610, 132611, 132612, 132613, 132614, 139081, 139082, 132570, 132571, 132573, 132572, 132574, 132575, 132576, 22724, 22725, 22726, 22727, 22728, 102756, 102757, 102760, 102761, 102762, 102764, 102744, 22729, 22730, 22731, 22732, 22733, 22734, 22735, 22736, 113293, 108101, 108095, 108096, 86113, 86114, 86123, 86126, 86127, 86109, 147456, 137307, 103107, 103108, 103109, 103110, 118243, 118244, 118240, 118241, 143942, 118238, 118239, 143938, 123996, 123995, 123994, 118399, 147941, 35171, 118412, 118410, 118398, 155248, 155249, 61879, 61878, 61874, 61877, 61872, 61871, 61863, 61864, 61867, 61870, 61869, 61865, 61868, 61855, 61854, 61853, 61852, 61851, 61850, 61849, 61848, 116172, 116171, 116167, 116166, 116165, 116182, 116181, 116180, 148731, 116198, 116199, 56522, 56521, 56518, 84409, 84408, 84407, 84406, 84405, 84410, 85550, 85551, 85552, 85544, 85545, 85541, 85543, 88995, 88994, 88993, 88992, 88991, 53303, 53479, 123371, 129538, 129539, 36005, 29071, 29070, 29069, 29068, 29067, 29066, 29065, 29064, 29063, 29062, 57800, 57797, 57798, 57580, 57581, 133197, 133196, 133195, 133194};
        right_turn_penalty = 27.83941936765456759;
        left_turn_penalty = 34.06376924353655511;
        expected = 1351.16017015357488162;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {34833, 34834, 90055, 90053, 90057, 130950, 130949, 130948, 130947, 130959, 130960, 130956, 130955, 22778, 139210, 139211, 130946, 139207, 139208, 130945, 130961, 130962, 130963, 130964, 130965, 130978, 130979, 152154, 130976, 130972, 130973, 130990, 130985, 130986, 130987, 130988, 130989, 102421, 102420, 102396, 102410, 102482, 109644, 109643, 109642, 109641, 109640, 109639, 109638, 109637, 109636, 109635, 109634, 109633, 109632, 109662, 22805, 22804, 22803, 22802, 22801, 22800, 22799, 22798, 22797, 22796, 22795, 22794, 22793, 22792, 22791, 22790, 22789, 3855, 3856, 3857, 87041, 87040, 87039, 87038, 87037, 87036, 87034, 87035, 29094, 22487, 22488, 22489, 22490, 22491, 22492, 114051, 114052, 114053, 114054, 114055, 114056, 114057, 114058, 114059, 102524, 468, 469, 470, 87478, 87479, 87480, 87481, 87482, 87483, 87484, 87485, 87486, 87487, 87488, 87489, 87490, 87491, 87492, 87493, 46987, 26944, 26943, 26942, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 129375, 129376, 129377, 129378, 26923, 136955, 136950, 136951, 136952, 136953, 114712, 26945, 26946, 26947, 26948, 26949, 26950, 26951, 114721, 114722, 114723, 114724, 146403, 146402, 146401, 146400, 146399, 83669, 83668, 83667, 83666, 83665, 83664, 83663, 83662, 83661, 83660, 83659, 83658, 83657, 83656, 83655, 83654, 81423, 81469};
        right_turn_penalty = 32.38596441515588253;
        left_turn_penalty = 24.03029869121883166;
        expected = 1569.60392714212594001;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {130129, 130130, 130131, 130132, 130133, 130134, 134287, 134288, 134289, 134281, 134282, 134290, 134291, 110866, 51140, 91394, 91395, 150620, 150619, 150618, 150617, 150616, 150630, 150632, 150398, 150397, 150396, 134619, 134618, 134617, 121914, 121913, 147039, 121915, 150399, 147038, 36250, 36251, 20043, 36244, 36245, 20042, 36254, 69794, 69793, 69787, 69784, 69789, 79388, 79387, 79386, 79385, 79376, 91164, 79382, 50461, 50462, 53431, 79374, 157655, 79381, 79324, 79323, 79322, 79315, 79318, 79312, 79282, 79271, 79272, 79275, 112894, 68134, 68133, 68132, 68114, 68123, 68109, 68110, 68130, 68126, 68131, 143131, 143137, 143138, 134205, 134206, 134207, 134208, 134209, 134200, 134201, 134202, 134203, 134204, 68055, 68058, 68100, 68049, 68051, 68052, 68095, 68096, 68097, 68098, 68059, 68048, 68085, 68086, 68087, 68088, 68089, 68090, 68091, 68092, 68093, 68094, 112854, 112857, 112856, 112855, 68067, 68064, 68054, 68068, 68069, 68070, 68071, 68072, 68073, 149147, 149148, 149149, 149150, 149151, 149152, 86676, 149153, 86674, 86675, 84227, 84226, 86509, 86510, 86511, 86512, 86513, 86514, 86515, 62635, 62636, 62639, 62655, 62656, 62657, 62658, 62659, 62660, 62661, 62662, 62663, 62664, 149112, 149110, 149111, 86668, 86669, 86670, 86671, 149566, 149567, 86667, 82627, 82628, 86666, 152314, 152315, 152316, 152317, 152318, 436, 86619, 86620, 86621, 86622, 103238, 103230, 103231, 103232, 103233, 103234, 103235, 103236, 103237, 86638, 86639, 86640, 86641, 86642, 86643, 86644, 86645, 86646, 84529, 84517, 84518, 84519, 84520, 84521, 84522, 84523, 84524, 132288, 132289, 132290, 132291, 132283, 132274, 132275, 132276, 132277, 132278, 132279, 132280, 132281, 132282, 114920, 114921, 114922, 114923, 114924, 114925, 114926, 114927, 114928, 114929, 114930, 114931, 110733, 110734, 149131, 149130, 110735, 137230, 146094, 149119, 149129, 149128, 149127, 149126, 149125, 154944, 154943, 154942, 154941, 154940, 83618, 83617, 83616, 46914, 46913, 46912, 46911, 46910, 46909, 46908, 46907, 30829, 146523, 152390, 152389, 152388, 152387, 152386, 47793, 47792, 46902, 46901, 46900, 46899, 47791, 47790, 438, 437, 5909, 5908, 398, 399, 400, 401, 402, 680, 30827, 30828, 84260, 84261, 42801, 42802, 42803, 42804, 42805, 42806, 154896, 154897, 154890, 154891, 154892, 154893, 154894, 154895, 28509, 28510, 28511, 28512, 28513, 83609, 28507, 28508, 138125, 138126, 102336, 102341, 102342, 102358, 102357, 102356, 102355, 102354, 102353, 102352, 102351, 102350, 88551, 102360, 88554, 88553, 102328, 102327, 102326, 102329, 88552, 578, 577, 576, 575, 574, 573, 572, 11029, 11028, 11027, 11026};
        right_turn_penalty = 26.88612752800811379;
        left_turn_penalty = 24.19484723529379977;
        expected = 1830.71552248908278671;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

        path = {75811, 99335, 99336, 151919, 129469, 98025, 97954, 98071, 98072, 98034, 97845, 97981, 98035, 98046, 98047, 98048, 98028, 97933, 97934, 97935, 97864, 98059, 98073, 97862, 98018, 97990, 97991, 97992, 97993, 137096, 98014, 98050, 98053, 98063, 98064, 658, 126442, 26726, 26727, 90680, 90681, 90682, 90683, 90684, 445, 642, 129022, 30037, 30038, 30383, 30384, 135915, 638, 115437, 115435, 115436, 115605, 633, 634, 635, 5740, 5739, 123963, 136753, 136752, 28571, 28572, 28575, 28576, 135041, 629, 630, 643, 111979, 84448, 84436, 111982, 111978, 111964, 111967, 84430, 84426, 111965, 111966, 28470, 28471, 111961, 28460, 28461, 28455, 28456, 146249, 146250, 101356, 111945, 23478, 23479, 111947, 111946, 6323, 127732, 127733, 111954, 111955, 23459, 23460, 111939, 101357, 114902, 9263, 111924, 111923, 111925, 101376, 111926, 28823, 28824, 28836, 28837, 6339, 6340, 140551, 140556, 140554, 82181, 140549, 82185, 82186, 82187, 82208, 82209, 113975, 6329, 108371, 108372, 143248, 143251, 143252, 143249, 143255, 143256, 143257, 143258, 151349, 157309, 157315, 157311, 157310, 157314, 132599, 132598, 132597, 132596, 132595, 132594, 132593, 132592, 132591, 132590, 132589, 132588, 132587, 132586, 132585, 132584, 132583, 132582, 132581, 132580, 132579, 132578, 132577, 132601, 132600, 132576, 132575, 132574, 132572, 132573, 132571, 132570, 139082, 139081, 132614, 132613, 132612, 132611, 132610, 132609, 132608, 132607, 98715, 98714, 98720, 58142, 58135, 58141, 58130, 58136, 58117, 98717, 99314, 99313, 99312, 99311, 99315, 99310, 99309, 149235, 149238, 149237, 149236, 149242, 149241, 149240, 149239, 121936, 121935, 121934, 121933, 74218, 74222, 74223, 74237, 74236, 149226, 149227, 149228, 149229, 130100};
        right_turn_penalty = 0.00000000000000000;
        left_turn_penalty = 0.00000000000000000;
        expected = 1992.53050376599730953;
        actual = compute_path_travel_time(path, right_turn_penalty, left_turn_penalty);
        CHECK(relative_error(expected, actual) < 0.001000000);

    } //path_cost_toronto_canada

} //path_cost_toronto_canada_public

